// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/mywish_service.proto

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	rpc/mywish_service.proto

It has these top-level messages:
	GetProductRequest
	GetProductResponse
	BidProductRequest
	BidProductResponse
	BuyOutRequest
	BuyOutResponse
	CreateProductRequest
	CreateProductResponse
	GetProductsRequest
	GetProductsResponse
	UpdateProductRequest
	UpdateProductResponse
	CheckOrCreateUserRequest
	CheckOrCreateUserResponse
	AuthUserRequest
	AuthUserResponse
	UpdateUserRequest
	UpdateUserResponse
	DeleteUserRequest
	DeleteUserResponse
	GetUserRequest
	GetUserResponse
	CreateUserRequest
	CreateUserResponse
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetProductRequest struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *GetProductRequest) Reset()                    { *m = GetProductRequest{} }
func (m *GetProductRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProductRequest) ProtoMessage()               {}
func (*GetProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetProductRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GetProductResponse struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *GetProductResponse) Reset()                    { *m = GetProductResponse{} }
func (m *GetProductResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProductResponse) ProtoMessage()               {}
func (*GetProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetProductResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type BidProductRequest struct {
}

func (m *BidProductRequest) Reset()                    { *m = BidProductRequest{} }
func (m *BidProductRequest) String() string            { return proto.CompactTextString(m) }
func (*BidProductRequest) ProtoMessage()               {}
func (*BidProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type BidProductResponse struct {
}

func (m *BidProductResponse) Reset()                    { *m = BidProductResponse{} }
func (m *BidProductResponse) String() string            { return proto.CompactTextString(m) }
func (*BidProductResponse) ProtoMessage()               {}
func (*BidProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type BuyOutRequest struct {
}

func (m *BuyOutRequest) Reset()                    { *m = BuyOutRequest{} }
func (m *BuyOutRequest) String() string            { return proto.CompactTextString(m) }
func (*BuyOutRequest) ProtoMessage()               {}
func (*BuyOutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type BuyOutResponse struct {
}

func (m *BuyOutResponse) Reset()                    { *m = BuyOutResponse{} }
func (m *BuyOutResponse) String() string            { return proto.CompactTextString(m) }
func (*BuyOutResponse) ProtoMessage()               {}
func (*BuyOutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type CreateProductRequest struct {
}

func (m *CreateProductRequest) Reset()                    { *m = CreateProductRequest{} }
func (m *CreateProductRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductRequest) ProtoMessage()               {}
func (*CreateProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CreateProductResponse struct {
}

func (m *CreateProductResponse) Reset()                    { *m = CreateProductResponse{} }
func (m *CreateProductResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductResponse) ProtoMessage()               {}
func (*CreateProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type GetProductsRequest struct {
}

func (m *GetProductsRequest) Reset()                    { *m = GetProductsRequest{} }
func (m *GetProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProductsRequest) ProtoMessage()               {}
func (*GetProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetProductsResponse struct {
}

func (m *GetProductsResponse) Reset()                    { *m = GetProductsResponse{} }
func (m *GetProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProductsResponse) ProtoMessage()               {}
func (*GetProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type UpdateProductRequest struct {
}

func (m *UpdateProductRequest) Reset()                    { *m = UpdateProductRequest{} }
func (m *UpdateProductRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductRequest) ProtoMessage()               {}
func (*UpdateProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type UpdateProductResponse struct {
}

func (m *UpdateProductResponse) Reset()                    { *m = UpdateProductResponse{} }
func (m *UpdateProductResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductResponse) ProtoMessage()               {}
func (*UpdateProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type CheckOrCreateUserRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *CheckOrCreateUserRequest) Reset()                    { *m = CheckOrCreateUserRequest{} }
func (m *CheckOrCreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckOrCreateUserRequest) ProtoMessage()               {}
func (*CheckOrCreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CheckOrCreateUserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CheckOrCreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CheckOrCreateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CheckOrCreateUserResponse struct {
	Succeed bool   `protobuf:"varint,1,opt,name=succeed" json:"succeed,omitempty"`
	Details string `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
}

func (m *CheckOrCreateUserResponse) Reset()                    { *m = CheckOrCreateUserResponse{} }
func (m *CheckOrCreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckOrCreateUserResponse) ProtoMessage()               {}
func (*CheckOrCreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CheckOrCreateUserResponse) GetSucceed() bool {
	if m != nil {
		return m.Succeed
	}
	return false
}

func (m *CheckOrCreateUserResponse) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type AuthUserRequest struct {
}

func (m *AuthUserRequest) Reset()                    { *m = AuthUserRequest{} }
func (m *AuthUserRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthUserRequest) ProtoMessage()               {}
func (*AuthUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type AuthUserResponse struct {
}

func (m *AuthUserResponse) Reset()                    { *m = AuthUserResponse{} }
func (m *AuthUserResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthUserResponse) ProtoMessage()               {}
func (*AuthUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type UpdateUserRequest struct {
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type UpdateUserResponse struct {
}

func (m *UpdateUserResponse) Reset()                    { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()               {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type DeleteUserRequest struct {
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type DeleteUserResponse struct {
}

func (m *DeleteUserResponse) Reset()                    { *m = DeleteUserResponse{} }
func (m *DeleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserResponse) ProtoMessage()               {}
func (*DeleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type GetUserRequest struct {
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type GetUserResponse struct {
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type CreateUserRequest struct {
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type CreateUserResponse struct {
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func init() {
	proto.RegisterType((*GetProductRequest)(nil), "rpc.GetProductRequest")
	proto.RegisterType((*GetProductResponse)(nil), "rpc.GetProductResponse")
	proto.RegisterType((*BidProductRequest)(nil), "rpc.BidProductRequest")
	proto.RegisterType((*BidProductResponse)(nil), "rpc.BidProductResponse")
	proto.RegisterType((*BuyOutRequest)(nil), "rpc.BuyOutRequest")
	proto.RegisterType((*BuyOutResponse)(nil), "rpc.BuyOutResponse")
	proto.RegisterType((*CreateProductRequest)(nil), "rpc.CreateProductRequest")
	proto.RegisterType((*CreateProductResponse)(nil), "rpc.CreateProductResponse")
	proto.RegisterType((*GetProductsRequest)(nil), "rpc.GetProductsRequest")
	proto.RegisterType((*GetProductsResponse)(nil), "rpc.GetProductsResponse")
	proto.RegisterType((*UpdateProductRequest)(nil), "rpc.UpdateProductRequest")
	proto.RegisterType((*UpdateProductResponse)(nil), "rpc.UpdateProductResponse")
	proto.RegisterType((*CheckOrCreateUserRequest)(nil), "rpc.CheckOrCreateUserRequest")
	proto.RegisterType((*CheckOrCreateUserResponse)(nil), "rpc.CheckOrCreateUserResponse")
	proto.RegisterType((*AuthUserRequest)(nil), "rpc.AuthUserRequest")
	proto.RegisterType((*AuthUserResponse)(nil), "rpc.AuthUserResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "rpc.UpdateUserRequest")
	proto.RegisterType((*UpdateUserResponse)(nil), "rpc.UpdateUserResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "rpc.DeleteUserRequest")
	proto.RegisterType((*DeleteUserResponse)(nil), "rpc.DeleteUserResponse")
	proto.RegisterType((*GetUserRequest)(nil), "rpc.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "rpc.GetUserResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "rpc.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "rpc.CreateUserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MyWishService service

type MyWishServiceClient interface {
	// <-------- Product APIs begin ---------> //
	CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error)
	UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
	GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error)
	GetProducts(ctx context.Context, in *GetProductsRequest, opts ...grpc.CallOption) (*GetProductsResponse, error)
	// <-------- Product APIs end -----------> //
	// <-------- User APIs begin ---------> //
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	CheckOrCreateUser(ctx context.Context, in *CheckOrCreateUserRequest, opts ...grpc.CallOption) (*CheckOrCreateUserResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	AuthUser(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error)
}

type myWishServiceClient struct {
	cc *grpc.ClientConn
}

func NewMyWishServiceClient(cc *grpc.ClientConn) MyWishServiceClient {
	return &myWishServiceClient{cc}
}

func (c *myWishServiceClient) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error) {
	out := new(CreateProductResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/CreateProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	out := new(UpdateProductResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/UpdateProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error) {
	out := new(GetProductResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/GetProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) GetProducts(ctx context.Context, in *GetProductsRequest, opts ...grpc.CallOption) (*GetProductsResponse, error) {
	out := new(GetProductsResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/GetProducts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) CheckOrCreateUser(ctx context.Context, in *CheckOrCreateUserRequest, opts ...grpc.CallOption) (*CheckOrCreateUserResponse, error) {
	out := new(CheckOrCreateUserResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/CheckOrCreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error) {
	out := new(DeleteUserResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myWishServiceClient) AuthUser(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error) {
	out := new(AuthUserResponse)
	err := grpc.Invoke(ctx, "/rpc.MyWishService/AuthUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MyWishService service

type MyWishServiceServer interface {
	// <-------- Product APIs begin ---------> //
	CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error)
	UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error)
	GetProduct(context.Context, *GetProductRequest) (*GetProductResponse, error)
	GetProducts(context.Context, *GetProductsRequest) (*GetProductsResponse, error)
	// <-------- Product APIs end -----------> //
	// <-------- User APIs begin ---------> //
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	CheckOrCreateUser(context.Context, *CheckOrCreateUserRequest) (*CheckOrCreateUserResponse, error)
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*DeleteUserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	AuthUser(context.Context, *AuthUserRequest) (*AuthUserResponse, error)
}

func RegisterMyWishServiceServer(s *grpc.Server, srv MyWishServiceServer) {
	s.RegisterService(&_MyWishService_serviceDesc, srv)
}

func _MyWishService_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/CreateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).CreateProduct(ctx, req.(*CreateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/UpdateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).UpdateProduct(ctx, req.(*UpdateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).GetProduct(ctx, req.(*GetProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_GetProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).GetProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/GetProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).GetProducts(ctx, req.(*GetProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_CheckOrCreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckOrCreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).CheckOrCreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/CheckOrCreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).CheckOrCreateUser(ctx, req.(*CheckOrCreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyWishService_AuthUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyWishServiceServer).AuthUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.MyWishService/AuthUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyWishServiceServer).AuthUser(ctx, req.(*AuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyWishService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.MyWishService",
	HandlerType: (*MyWishServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProduct",
			Handler:    _MyWishService_CreateProduct_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _MyWishService_UpdateProduct_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _MyWishService_GetProduct_Handler,
		},
		{
			MethodName: "GetProducts",
			Handler:    _MyWishService_GetProducts_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _MyWishService_CreateUser_Handler,
		},
		{
			MethodName: "CheckOrCreateUser",
			Handler:    _MyWishService_CheckOrCreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _MyWishService_GetUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _MyWishService_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _MyWishService_UpdateUser_Handler,
		},
		{
			MethodName: "AuthUser",
			Handler:    _MyWishService_AuthUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/mywish_service.proto",
}

func init() { proto.RegisterFile("rpc/mywish_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0xd1, 0x6e, 0xd3, 0x3e,
	0x14, 0xc6, 0xd5, 0x4d, 0xff, 0x7f, 0xbb, 0x33, 0x75, 0x6d, 0xdc, 0xb4, 0xcb, 0xc2, 0x40, 0x28,
	0x57, 0xd0, 0x8b, 0x46, 0xc0, 0xdd, 0xee, 0xd8, 0x10, 0xbb, 0x82, 0x42, 0xd1, 0x84, 0xc4, 0x05,
	0x93, 0x49, 0xac, 0xd6, 0x22, 0x6d, 0x82, 0xed, 0x74, 0xea, 0x2d, 0x12, 0x4f, 0xc0, 0xa3, 0xf1,
	0x0a, 0x3c, 0x08, 0x4a, 0x6c, 0x37, 0x4e, 0x9c, 0x5e, 0xfa, 0xf3, 0xc9, 0xef, 0x9c, 0x7c, 0xf9,
	0x4e, 0x0b, 0x1e, 0xcb, 0xa2, 0x70, 0xbd, 0x7b, 0xa0, 0x7c, 0x75, 0xcf, 0x09, 0xdb, 0xd2, 0x88,
	0xcc, 0x32, 0x96, 0x8a, 0x14, 0x1d, 0xb3, 0x2c, 0xf2, 0x2f, 0x97, 0x69, 0xba, 0x4c, 0x48, 0x88,
	0x33, 0x1a, 0xe2, 0xcd, 0x26, 0x15, 0x58, 0xd0, 0x74, 0xc3, 0x65, 0x49, 0xf0, 0x1c, 0x9c, 0x5b,
	0x22, 0x3e, 0xb0, 0x34, 0xce, 0x23, 0xb1, 0x20, 0x3f, 0x72, 0xc2, 0x05, 0x72, 0xe1, 0xbf, 0x2d,
	0x4e, 0x72, 0xe2, 0x75, 0x9e, 0x76, 0x9e, 0x9d, 0x2c, 0xe4, 0x21, 0x98, 0x02, 0x32, 0x4b, 0x79,
	0x96, 0x6e, 0x38, 0x39, 0x50, 0x3b, 0x02, 0xe7, 0x9a, 0xc6, 0x75, 0x6c, 0xe0, 0x02, 0x32, 0x45,
	0x09, 0x08, 0x06, 0xd0, 0xbf, 0xce, 0x77, 0xf3, 0x7c, 0x5f, 0x36, 0x84, 0x33, 0x2d, 0xa8, 0x92,
	0x09, 0xb8, 0x37, 0x8c, 0x60, 0x41, 0x1a, 0xc0, 0x73, 0x18, 0x37, 0x74, 0xf5, 0x80, 0x6b, 0x8e,
	0xca, 0x75, 0xf9, 0x18, 0x46, 0x35, 0xb5, 0xa2, 0xdf, 0x65, 0x71, 0x2b, 0xbd, 0xa1, 0xab, 0x07,
	0x28, 0x78, 0x37, 0x2b, 0x12, 0x7d, 0x9f, 0x33, 0xd9, 0xfd, 0x8e, 0x13, 0xa6, 0xad, 0x7b, 0x04,
	0x27, 0x39, 0x27, 0xec, 0x7e, 0x83, 0xd7, 0xda, 0x92, 0x5e, 0x21, 0xbc, 0xc7, 0xeb, 0xd2, 0x2b,
	0xb2, 0xc6, 0x34, 0xf1, 0x8e, 0xa4, 0x57, 0xe5, 0x01, 0xf9, 0xd0, 0xcb, 0x30, 0xe7, 0x0f, 0x29,
	0x8b, 0xbd, 0x63, 0xf9, 0x84, 0x3e, 0x07, 0x73, 0xb8, 0x68, 0x69, 0xa5, 0xac, 0xf7, 0xa0, 0xcb,
	0xf3, 0x28, 0x22, 0x24, 0x2e, 0x3b, 0xf5, 0x16, 0xfa, 0x58, 0xdc, 0xc4, 0x44, 0x60, 0x9a, 0x70,
	0xd5, 0x4a, 0x1f, 0x03, 0x07, 0x06, 0xaf, 0x73, 0xb1, 0x32, 0x46, 0x0e, 0x10, 0x0c, 0x2b, 0x49,
	0xbd, 0xe2, 0x08, 0x1c, 0xf9, 0xee, 0x66, 0xa1, 0x0b, 0xc8, 0x14, 0xab, 0xd2, 0x37, 0x24, 0x21,
	0x56, 0xa9, 0x29, 0xaa, 0xd2, 0x21, 0x9c, 0xdd, 0x12, 0x61, 0xd6, 0x39, 0x30, 0xd8, 0x2b, 0x15,
	0xcf, 0xb2, 0xb5, 0xe0, 0xd9, 0x06, 0xbc, 0xfc, 0xd5, 0x85, 0xfe, 0xbb, 0xdd, 0x67, 0xca, 0x57,
	0x9f, 0x64, 0xee, 0xd1, 0x57, 0xe8, 0xd7, 0x12, 0x81, 0x2e, 0x66, 0x2c, 0x8b, 0x66, 0x6d, 0xe9,
	0xf1, 0xfd, 0xb6, 0x2b, 0x9d, 0x89, 0x9f, 0x7f, 0xfe, 0xfe, 0x3e, 0x1a, 0x06, 0xa7, 0xe1, 0xf6,
	0x45, 0x98, 0xc9, 0xcb, 0xab, 0xce, 0xb4, 0xe0, 0xd7, 0x32, 0xa1, 0xf8, 0x6d, 0xf9, 0x51, 0xfc,
	0xf6, 0x08, 0x29, 0xbe, 0xdf, 0xe4, 0x2f, 0x00, 0xaa, 0x88, 0xa2, 0x49, 0x49, 0xb0, 0xf6, 0xd3,
	0x3f, 0xb7, 0x74, 0xed, 0x5d, 0x89, 0xed, 0x23, 0x13, 0x8b, 0xbe, 0xc0, 0xa9, 0x11, 0x7b, 0xd4,
	0x7c, 0x58, 0xaf, 0x87, 0xef, 0xd9, 0x17, 0x0a, 0xeb, 0x95, 0x58, 0x84, 0x86, 0x06, 0x36, 0x4c,
	0x28, 0x17, 0xc5, 0xbc, 0xd5, 0x77, 0x51, 0xf3, 0x5a, 0x5f, 0x4f, 0xcd, 0x6b, 0x7f, 0x40, 0x3d,
	0x6f, 0xd0, 0x2b, 0xc0, 0xc5, 0x9a, 0x14, 0x1e, 0x64, 0xe0, 0x58, 0x99, 0x47, 0x8f, 0x25, 0xe2,
	0xc0, 0xda, 0xf9, 0x4f, 0x0e, 0x5d, 0xab, 0x46, 0x97, 0x65, 0xa3, 0x49, 0xe0, 0xe8, 0x46, 0x21,
	0x23, 0x4b, 0xca, 0x85, 0xec, 0xf8, 0x16, 0xba, 0x2a, 0x85, 0x68, 0xa4, 0x4d, 0x30, 0xe9, 0x6e,
	0x5d, 0xd4, 0x69, 0x2e, 0x99, 0x80, 0xf6, 0xc3, 0xa3, 0x39, 0x40, 0x95, 0x7a, 0xe5, 0x86, 0xb5,
	0x1b, 0xca, 0x8d, 0xb6, 0xf5, 0x90, 0xc0, 0x69, 0x05, 0x5c, 0x00, 0x54, 0x1b, 0xa7, 0x80, 0xd6,
	0x5e, 0x2a, 0x60, 0xdb, 0x6a, 0x4a, 0x7b, 0xfd, 0x9a, 0xbd, 0x1f, 0xa1, 0xa7, 0xd7, 0x1d, 0xc9,
	0x17, 0x6b, 0xfc, 0x20, 0xf8, 0xe3, 0x86, 0x5a, 0x4f, 0x41, 0xd0, 0xdf, 0x7b, 0x88, 0x73, 0xb1,
	0xba, 0xea, 0x4c, 0xbf, 0xfd, 0x5f, 0xfe, 0x97, 0xbc, 0xfa, 0x17, 0x00, 0x00, 0xff, 0xff, 0x8a,
	0x52, 0xea, 0xc7, 0x8a, 0x06, 0x00, 0x00,
}
