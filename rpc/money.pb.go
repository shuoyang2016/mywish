// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/shuoyang2016/mywish/rpc/money.proto

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	github.com/shuoyang2016/mywish/rpc/money.proto
	github.com/shuoyang2016/mywish/rpc/mywish_service.proto
	github.com/shuoyang2016/mywish/rpc/player.proto
	github.com/shuoyang2016/mywish/rpc/product.proto

It has these top-level messages:
	Price
	GetProductRequest
	GetProductResponse
	BidProductRequest
	BidProductResponse
	BuyOutRequest
	BuyOutResponse
	CreateProductRequest
	CreateProductResponse
	GetProductsRequest
	GetProductsResponse
	UpdateProductRequest
	UpdateProductResponse
	CheckOrCreateUserRequest
	CheckOrCreateUserResponse
	AuthUserRequest
	AuthUserResponse
	UpdateUserRequest
	UpdateUserResponse
	DeleteUserRequest
	DeleteUserResponse
	GetUserRequest
	GetUserResponse
	CreateUserRequest
	CreateUserResponse
	CreateBidderRequest
	CreateBidderResponse
	GetBidderRequest
	GetBidderResponse
	UpdateBidderRequest
	UpdateBidderResponse
	TestingDropRequest
	TestingDropResponse
	Player
	Bidder
	Bid
	Product
	BidEntry
	KVPair
	SupriseProduct
	VagueProduct
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CurrencyType int32

const (
	CurrencyType_DOLLAR CurrencyType = 0
	CurrencyType_RMB    CurrencyType = 1
)

var CurrencyType_name = map[int32]string{
	0: "DOLLAR",
	1: "RMB",
}
var CurrencyType_value = map[string]int32{
	"DOLLAR": 0,
	"RMB":    1,
}

func (x CurrencyType) String() string {
	return proto.EnumName(CurrencyType_name, int32(x))
}
func (CurrencyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Price struct {
	CurrencyType CurrencyType `protobuf:"varint,1,opt,name=currency_type,json=currencyType,enum=rpc.CurrencyType" json:"currency_type,omitempty"`
	Amount       float64      `protobuf:"fixed64,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *Price) Reset()                    { *m = Price{} }
func (m *Price) String() string            { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()               {}
func (*Price) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Price) GetCurrencyType() CurrencyType {
	if m != nil {
		return m.CurrencyType
	}
	return CurrencyType_DOLLAR
}

func (m *Price) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func init() {
	proto.RegisterType((*Price)(nil), "rpc.Price")
	proto.RegisterEnum("rpc.CurrencyType", CurrencyType_name, CurrencyType_value)
}

func init() { proto.RegisterFile("github.com/shuoyang2016/mywish/rpc/money.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xce, 0x3f, 0x4b, 0x04, 0x31,
	0x14, 0x04, 0x70, 0xe3, 0xe1, 0x0a, 0x8f, 0x53, 0xce, 0x14, 0x72, 0x88, 0xc5, 0xa1, 0xcd, 0x61,
	0x91, 0xe8, 0x0a, 0xdb, 0xfb, 0xa7, 0x5c, 0x51, 0x82, 0x60, 0x29, 0xd9, 0x47, 0xc8, 0x06, 0x4c,
	0x5e, 0xc8, 0x26, 0x48, 0xbe, 0xbd, 0xe0, 0x6d, 0xb1, 0xe5, 0x8f, 0x99, 0x81, 0x01, 0x61, 0x5d,
	0x1e, 0xcb, 0x20, 0x90, 0xbc, 0x9c, 0xc6, 0x42, 0x55, 0x07, 0xdb, 0xde, 0x3f, 0x74, 0xd2, 0xd7,
	0x5f, 0x37, 0x8d, 0x32, 0x45, 0x94, 0x9e, 0x82, 0xa9, 0x22, 0x26, 0xca, 0xc4, 0x57, 0x29, 0xe2,
	0xd5, 0xb5, 0x25, 0xb2, 0x3f, 0x46, 0xea, 0xe8, 0xa4, 0x0e, 0x81, 0xb2, 0xce, 0x8e, 0xc2, 0x74,
	0xa8, 0xdc, 0x7c, 0xc1, 0xc9, 0x47, 0x72, 0x68, 0x78, 0x07, 0x67, 0x58, 0x52, 0x32, 0x01, 0xeb,
	0x77, 0xae, 0xd1, 0x6c, 0xd9, 0x8e, 0xed, 0xcf, 0xdb, 0x0b, 0x91, 0x22, 0x8a, 0x97, 0x39, 0xf9,
	0xac, 0xd1, 0xa8, 0x35, 0x2e, 0xc4, 0x2f, 0xa1, 0xd1, 0x9e, 0x4a, 0xc8, 0xdb, 0xe3, 0x1d, 0xdb,
	0x33, 0x35, 0xeb, 0xee, 0x16, 0xd6, 0xcb, 0x15, 0x07, 0x68, 0x5e, 0xdf, 0xfb, 0xfe, 0x49, 0x6d,
	0x8e, 0xf8, 0x29, 0xac, 0xd4, 0xdb, 0xf3, 0x86, 0x0d, 0xcd, 0xff, 0x89, 0xc7, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xde, 0x81, 0xc2, 0x80, 0xd9, 0x00, 0x00, 0x00,
}
