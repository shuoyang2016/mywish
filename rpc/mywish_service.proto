syntax = "proto3";
package rpc;
import "google/api/annotations.proto";

message GetProductRequest {
    string value = 1;
}

message GetProductResponse {
    string value = 1;
}

message BidProductRequest {

}

message BidProductResponse {

}

message BuyOutRequest {

}

message BuyOutResponse {

}

message CreateProductRequest {

}

message CreateProductResponse {

}

message GetProductsRequest {

}

message GetProductsResponse {

}

message UpdateProductRequest {

}

message UpdateProductResponse {

}

message CheckOrCreateUserRequest {
    string user_name = 1;
    string email = 2;
    string password = 3;
}
message CheckOrCreateUserResponse {
    bool succeed = 1;
    string details = 2;
}

message AuthUserRequest {}
message AuthUserResponse {}
message UpdateUserRequest {}
message UpdateUserResponse {}
message DeleteUserRequest {}
message DeleteUserResponse {}
message GetUserRequest {}
message GetUserResponse {}
message CreateUserRequest {}
message CreateUserResponse {}



service MyWishService {
    // <-------- Product APIs begin ---------> //
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {
        option (google.api.http) = {
          post: "/v1/product"
          body: "*"
        };
    }

    rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {
        option (google.api.http) = {
          put: "/v1/product"
          body: "*"
        };
    }

    rpc GetProduct(GetProductRequest) returns (GetProductResponse) {
        option (google.api.http) = {
          get: "/v1/product"
        };
    }

    rpc GetProducts(GetProductsRequest) returns (GetProductsResponse) {
        option (google.api.http) = {
          get: "/v1/product/list"
        };
    }
    // <-------- Product APIs end -----------> //
    // <-------- User APIs begin ---------> //
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
             option (google.api.http) = {
          post: "/v1/user"
          body: "*"
        };
    }
    rpc CheckOrCreateUser(CheckOrCreateUserRequest) returns (CheckOrCreateUserResponse) {
        option (google.api.http) = {
          post: "/v1/user/register"
          body: "*"
        };
    }
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
          get: "/v1/user"
        };
    }
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
          delete: "/v1/user"
        };
    }
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
          put: "/v1/user"
          body: "*"
        };
    }
    rpc AuthUser(AuthUserRequest) returns (AuthUserResponse) {
        option (google.api.http) = {
          post: "/v1/user/auth"
          body: "*"
        };
    }
    // <-------- User APIs end -----------> //
}