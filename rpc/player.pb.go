// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/shuoyang2016/mywish/rpc/player.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Bidder struct {
	Id                   int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ShippingAddress      string  `protobuf:"bytes,3,opt,name=shipping_address,json=shippingAddress" json:"shipping_address,omitempty"`
	Alias                string  `protobuf:"bytes,4,opt,name=alias" json:"alias,omitempty"`
	TotalAmount          *Price  `protobuf:"bytes,5,opt,name=total_amount,json=totalAmount" json:"total_amount,omitempty"`
	TotalAmountPending   *Price  `protobuf:"bytes,6,opt,name=total_amount_pending,json=totalAmountPending" json:"total_amount_pending,omitempty"`
	PendingBids          []*Bid  `protobuf:"bytes,7,rep,name=pending_bids,json=pendingBids" json:"pending_bids,omitempty"`
	InShippingProductIds []int64 `protobuf:"varint,8,rep,packed,name=in_shipping_product_ids,json=inShippingProductIds" json:"in_shipping_product_ids,omitempty"`
	ClosedProductIds     []int64 `protobuf:"varint,9,rep,packed,name=closed_product_ids,json=closedProductIds" json:"closed_product_ids,omitempty"`
	ProductIdsInRequest  []int64 `protobuf:"varint,10,rep,packed,name=product_ids_in_request,json=productIdsInRequest" json:"product_ids_in_request,omitempty"`
}

func (m *Bidder) Reset()                    { *m = Bidder{} }
func (m *Bidder) String() string            { return proto.CompactTextString(m) }
func (*Bidder) ProtoMessage()               {}
func (*Bidder) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Bidder) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Bidder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bidder) GetShippingAddress() string {
	if m != nil {
		return m.ShippingAddress
	}
	return ""
}

func (m *Bidder) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Bidder) GetTotalAmount() *Price {
	if m != nil {
		return m.TotalAmount
	}
	return nil
}

func (m *Bidder) GetTotalAmountPending() *Price {
	if m != nil {
		return m.TotalAmountPending
	}
	return nil
}

func (m *Bidder) GetPendingBids() []*Bid {
	if m != nil {
		return m.PendingBids
	}
	return nil
}

func (m *Bidder) GetInShippingProductIds() []int64 {
	if m != nil {
		return m.InShippingProductIds
	}
	return nil
}

func (m *Bidder) GetClosedProductIds() []int64 {
	if m != nil {
		return m.ClosedProductIds
	}
	return nil
}

func (m *Bidder) GetProductIdsInRequest() []int64 {
	if m != nil {
		return m.ProductIdsInRequest
	}
	return nil
}

func init() {
	proto.RegisterType((*Bidder)(nil), "rpc.Bidder")
}

func init() { proto.RegisterFile("github.com/shuoyang2016/mywish/rpc/player.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x6a, 0xdb, 0x30,
	0x18, 0x80, 0x71, 0x9c, 0x64, 0x89, 0x1c, 0xb6, 0xa0, 0x85, 0x4d, 0x84, 0x1d, 0xcc, 0x4e, 0x1e,
	0xdb, 0xec, 0x2d, 0x61, 0x3b, 0xed, 0x92, 0xdc, 0x72, 0x0b, 0xde, 0x03, 0x08, 0xc5, 0x12, 0xf6,
	0x0f, 0xb6, 0xa4, 0x4a, 0x32, 0xc5, 0x8f, 0xd3, 0x37, 0x2d, 0x95, 0xd2, 0xe0, 0xd2, 0x4b, 0x6f,
	0xd2, 0xff, 0x7d, 0x9f, 0x40, 0xfc, 0xa8, 0xa8, 0xc1, 0x35, 0xfd, 0x25, 0xaf, 0x54, 0x57, 0xd8,
	0xa6, 0x57, 0x03, 0x93, 0xf5, 0xee, 0xd7, 0xef, 0xbf, 0x45, 0x37, 0xdc, 0x83, 0x6d, 0x0a, 0xa3,
	0xab, 0x42, 0xb7, 0x6c, 0x10, 0x26, 0xd7, 0x46, 0x39, 0x85, 0x63, 0xa3, 0xab, 0xed, 0x97, 0x5a,
	0xa9, 0xba, 0x15, 0x05, 0xd3, 0x50, 0x30, 0x29, 0x95, 0x63, 0x0e, 0x94, 0xb4, 0x41, 0xd9, 0xe6,
	0x6f, 0x78, 0xb3, 0x53, 0x52, 0x0c, 0xc1, 0xff, 0xfa, 0x10, 0xa3, 0xf9, 0x11, 0x38, 0x17, 0x06,
	0xbf, 0x47, 0x13, 0xe0, 0x24, 0x4a, 0xa3, 0x2c, 0x2e, 0x27, 0xc0, 0x31, 0x46, 0x53, 0xc9, 0x3a,
	0x41, 0x26, 0x69, 0x94, 0x2d, 0x4b, 0x7f, 0xc6, 0xdf, 0xd0, 0xda, 0x36, 0xa0, 0x35, 0xc8, 0x9a,
	0x32, 0xce, 0x8d, 0xb0, 0x96, 0xc4, 0x9e, 0x7f, 0x78, 0x9e, 0x1f, 0xc2, 0x18, 0x6f, 0xd0, 0x8c,
	0xb5, 0xc0, 0x2c, 0x99, 0x7a, 0x1e, 0x2e, 0xf8, 0x27, 0x5a, 0x39, 0xe5, 0x58, 0x4b, 0x59, 0xa7,
	0x7a, 0xe9, 0xc8, 0x2c, 0x8d, 0xb2, 0x64, 0x87, 0x72, 0xa3, 0xab, 0xfc, 0x6c, 0xa0, 0x12, 0x65,
	0xe2, 0xf9, 0xc1, 0x63, 0xfc, 0x0f, 0x6d, 0xc6, 0x3a, 0xd5, 0x42, 0x72, 0x90, 0x35, 0x99, 0xbf,
	0xca, 0xf0, 0x28, 0x3b, 0x07, 0x0b, 0x7f, 0x47, 0xab, 0x6b, 0x40, 0x2f, 0xc0, 0x2d, 0x79, 0x97,
	0xc6, 0x59, 0xb2, 0x5b, 0xf8, 0xea, 0x08, 0xbc, 0x4c, 0xae, 0xf4, 0x08, 0xdc, 0xe2, 0x3f, 0xe8,
	0x33, 0x48, 0x7a, 0xfb, 0x9d, 0x36, 0x8a, 0xf7, 0x95, 0xa3, 0x4f, 0xdd, 0x22, 0x8d, 0xb3, 0xb8,
	0xdc, 0x80, 0xfc, 0x7f, 0xa5, 0xe7, 0x00, 0x4f, 0xdc, 0xe2, 0x1f, 0x08, 0x57, 0xad, 0xb2, 0x82,
	0xbf, 0x28, 0x96, 0xbe, 0x58, 0x07, 0x32, 0xb2, 0xf7, 0xe8, 0xd3, 0x48, 0xa3, 0x20, 0xa9, 0x11,
	0x77, 0xbd, 0xb0, 0x8e, 0x20, 0x5f, 0x7c, 0xd4, 0x37, 0xf7, 0x24, 0xcb, 0x80, 0x2e, 0x73, 0xbf,
	0xaa, 0xfd, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xe1, 0x6a, 0x7a, 0x30, 0x02, 0x00, 0x00,
}
